
#include <Arduino.h>
#include <Wire.h>
#include <Closeable.h>
#include <Seekable.h>
#include <InputStream.h>
#include <ByteArrayInputStream.h>
#include <GraphicalLiquidCrystalGraphicState.h>
#include <GraphicalLiquidCrystalBitmapFont.h>
#include <GraphicalLiquidCrystalText.h>
#include <GraphicalLiquidCrystalNokia5110.h>

#define DATA_PIN            7
#define CLOCK_PIN           6
#define RST_PIN             3
#define DC_PIN              5
#define SCE_PIN             4

// https://github.com/dalmirdasilva/GlcdBitmapFontCreator (MSB)
const unsigned char f[] = { 0x0, 0x5, 0x8, 0x1, 0x20, 0x7e, 0x0, 0x8, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x6, 0x5f, 0x6, 0x0,
        0x7, 0x3, 0x0, 0x7, 0x3, 0x24, 0x7e, 0x24, 0x7e, 0x24, 0x24, 0x2b, 0x6a, 0x12, 0x0, 0x63, 0x13, 0x8, 0x64, 0x63,
        0x36, 0x49, 0x56, 0x20, 0x50, 0x0, 0x7, 0x3, 0x0, 0x0, 0x0, 0x3e, 0x41, 0x0, 0x0, 0x0, 0x41, 0x3e, 0x0, 0x0,
        0x8, 0x3e, 0x1c, 0x3e, 0x8, 0x8, 0x8, 0x3e, 0x8, 0x8, 0x0, 0xe0, 0x60, 0x0, 0x0, 0x8, 0x8, 0x8, 0x8, 0x8, 0x0,
        0x60, 0x60, 0x0, 0x0, 0x20, 0x10, 0x8, 0x4, 0x2, 0x3e, 0x51, 0x49, 0x45, 0x3e, 0x0, 0x42, 0x7f, 0x40, 0x0, 0x62,
        0x51, 0x49, 0x49, 0x46, 0x22, 0x49, 0x49, 0x49, 0x36, 0x18, 0x14, 0x12, 0x7f, 0x10, 0x2f, 0x49, 0x49, 0x49,
        0x31, 0x3c, 0x4a, 0x49, 0x49, 0x30, 0x1, 0x71, 0x9, 0x5, 0x3, 0x36, 0x49, 0x49, 0x49, 0x36, 0x6, 0x49, 0x49,
        0x29, 0x1e, 0x0, 0x6c, 0x6c, 0x0, 0x0, 0x0, 0xec, 0x6c, 0x0, 0x0, 0x8, 0x14, 0x22, 0x41, 0x0, 0x24, 0x24, 0x24,
        0x24, 0x24, 0x0, 0x41, 0x22, 0x14, 0x8, 0x2, 0x1, 0x59, 0x9, 0x6, 0x3e, 0x41, 0x5d, 0x55, 0x1e, 0x7e, 0x9, 0x9,
        0x9, 0x7e, 0x7f, 0x49, 0x49, 0x49, 0x36, 0x3e, 0x41, 0x41, 0x41, 0x22, 0x7f, 0x41, 0x41, 0x41, 0x3e, 0x7f, 0x49,
        0x49, 0x49, 0x41, 0x7f, 0x9, 0x9, 0x9, 0x1, 0x3e, 0x41, 0x49, 0x49, 0x7a, 0x7f, 0x8, 0x8, 0x8, 0x7f, 0x0, 0x41,
        0x7f, 0x41, 0x0, 0x30, 0x40, 0x40, 0x40, 0x3f, 0x7f, 0x8, 0x14, 0x22, 0x41, 0x7f, 0x40, 0x40, 0x40, 0x40, 0x7f,
        0x2, 0x4, 0x2, 0x7f, 0x7f, 0x2, 0x4, 0x8, 0x7f, 0x3e, 0x41, 0x41, 0x41, 0x3e, 0x7f, 0x9, 0x9, 0x9, 0x6, 0x3e,
        0x41, 0x51, 0x21, 0x5e, 0x7f, 0x9, 0x9, 0x19, 0x66, 0x26, 0x49, 0x49, 0x49, 0x32, 0x1, 0x1, 0x7f, 0x1, 0x1,
        0x3f, 0x40, 0x40, 0x40, 0x3f, 0x1f, 0x20, 0x40, 0x20, 0x1f, 0x3f, 0x40, 0x3c, 0x40, 0x3f, 0x63, 0x14, 0x8, 0x14,
        0x63, 0x7, 0x8, 0x70, 0x8, 0x7, 0x71, 0x49, 0x45, 0x43, 0x0, 0x0, 0x7f, 0x41, 0x41, 0x0, 0x2, 0x4, 0x8, 0x10,
        0x20, 0x0, 0x41, 0x41, 0x7f, 0x0, 0x4, 0x2, 0x1, 0x2, 0x4, 0x80, 0x80, 0x80, 0x80, 0x80, 0x0, 0x3, 0x7, 0x0,
        0x0, 0x20, 0x54, 0x54, 0x54, 0x78, 0x7f, 0x44, 0x44, 0x44, 0x38, 0x38, 0x44, 0x44, 0x44, 0x28, 0x38, 0x44, 0x44,
        0x44, 0x7f, 0x38, 0x54, 0x54, 0x54, 0x18, 0x8, 0x7e, 0x9, 0x9, 0x0, 0x18, 0xa4, 0xa4, 0xa4, 0x7c, 0x7f, 0x4,
        0x4, 0x78, 0x0, 0x0, 0x0, 0x7d, 0x0, 0x0, 0x40, 0x80, 0x84, 0x7d, 0x0, 0x7f, 0x10, 0x28, 0x44, 0x0, 0x0, 0x0,
        0x7f, 0x40, 0x0, 0x7c, 0x4, 0x18, 0x4, 0x78, 0x7c, 0x4, 0x4, 0x78, 0x0, 0x38, 0x44, 0x44, 0x44, 0x38, 0xfc,
        0x44, 0x44, 0x44, 0x38, 0x38, 0x44, 0x44, 0x44, 0xfc, 0x44, 0x78, 0x44, 0x4, 0x8, 0x8, 0x54, 0x54, 0x54, 0x20,
        0x4, 0x3e, 0x44, 0x24, 0x0, 0x3c, 0x40, 0x20, 0x7c, 0x0, 0x1c, 0x20, 0x40, 0x20, 0x1c, 0x3c, 0x60, 0x30, 0x60,
        0x3c, 0x6c, 0x10, 0x10, 0x6c, 0x0, 0x9c, 0xa0, 0x60, 0x3c, 0x0, 0x64, 0x54, 0x54, 0x4c, 0x0, 0x8, 0x3e, 0x41,
        0x41, 0x0, 0x0, 0x0, 0x7f, 0x0, 0x0, 0x0, 0x41, 0x41, 0x3e, 0x8, 0x2, 0x1, 0x2, 0x1, 0x0 };

void setup() {
    Serial.begin(9600);

    GraphicalLiquidCrystalGraphicState graphicState;
    ByteArrayInputStream is((unsigned char *) f, sizeof(f));

    GraphicalLiquidCrystalNokia5110 glcdDriver(DATA_PIN, CLOCK_PIN, RST_PIN, DC_PIN, SCE_PIN);

    glcdDriver.init(GraphicalLiquidCrystal::MODE_ON);
    glcdDriver.setContrast(0x37);
    glcdDriver.screen(0x00);

    graphicState.setColor(GraphicalLiquidCrystal::COLOR_WHITE);
    graphicState.setLeading(1);
    graphicState.setSpace(1);

    GraphicalLiquidCrystalBitmapFont font(&is);
    GraphicalLiquidCrystalText glcdText(&glcdDriver, &font, &graphicState);

    GraphicalLiquidCrystalRectangle rec0(0, 0, glcdDriver.getWidth() - 1, glcdDriver.getHeight() - 1);
    glcdText.printString(&rec0, (unsigned char*) "Lorem ipsum dolor sit amet, consectetur adipiscing elit.", 100, 1);

    delay(4000);

    glcdDriver.screen(0x00);
    graphicState.setLeading(3);
    graphicState.setSpace(3);
    GraphicalLiquidCrystalRectangle rec1(0, 0, glcdDriver.getWidth() - 1, glcdDriver.getHeight() - 1);
    glcdText.printString(&rec1, (unsigned char*) "Integer et felis sit amet felis varius auctor. In et metus est.", 100,  1);

    delay(4000);

    glcdDriver.screen(0x00);
    graphicState.setLeading(1);
    graphicState.setSpace(1);
    GraphicalLiquidCrystalRectangle rec2(0, 0, 127, 63);
    glcdText.printString(&rec2, (unsigned char*) "12", 100, 3);
}

void loop() {
}
